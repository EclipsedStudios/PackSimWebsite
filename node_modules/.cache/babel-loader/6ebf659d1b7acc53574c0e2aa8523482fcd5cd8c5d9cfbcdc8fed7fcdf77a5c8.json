{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Iwolf\\\\Documents\\\\Draft\\\\draftapp\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport './App.css';\nimport SetSelection from './components/SetSelection';\nimport getCardImage from './components/getCardImage';\nimport BoosterPack from './components/BoosterPack';\nimport React, { useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [cards, setCards] = useState([]);\n  const [set, setSet] = useState('');\n  function onStartDraft(setCode) {\n    setSet(setCode);\n  }\n  useEffect(() => {\n    async function fetchCards() {\n      if (set) {\n        try {\n          const response = await fetch(`https://api.scryfall.com/cards/random?q=set:${set} (rarity:rare OR rarity:mythic)`);\n          const {\n            name\n          } = await response.json();\n          const rareMythic = await getCardImage(name, 'large');\n          const uncommons = await Promise.all(Array.from({\n            length: 3\n          }, async () => {\n            const response = await fetch(`https://api.scryfall.com/cards/random?q=set:${set} rarity:uncommon`);\n            const {\n              name\n            } = await response.json();\n            return getCardImage(name, 'large');\n          }));\n          const commons = await Promise.all(Array.from({\n            length: 10\n          }, async () => {\n            const response = await fetch(`https://api.scryfall.com/cards/random?q=set:${set} rarity:common -t:basic`);\n            const {\n              name\n            } = await response.json();\n            return getCardImage(name, 'large');\n          }));\n          const basicLands = await Promise.all(Array.from({\n            length: 1\n          }, async () => {\n            const response = await fetch(`https://api.scryfall.com/cards/random?q=set:${set} (t:basic)`);\n            const {\n              name\n            } = await response.json();\n            return getCardImage(name, 'large');\n          }));\n          const cardImages = [rareMythic, ...uncommons,, ...commons, ...basicLands];\n          setCards(cardImages);\n        } catch (error) {\n          console.error(error);\n        }\n      }\n    }\n    fetchCards();\n  }, [set]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"cardGrid\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"DraftStation\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n        children: \"Magic the Gathering Drafting Simulator\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Welcome to the DraftStation! Create a drafting lobby or join one!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(SetSelection, {\n        onStartDraft: onStartDraft\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 9\n      }, this), cards.length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(BoosterPack, {\n          cards: cards\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"card-grid\",\n          children: cards.map((card, index) => /*#__PURE__*/_jsxDEV(\"img\", {\n            src: card,\n            alt: `Card ${index + 1}`,\n            className: \"magicCard\"\n          }, index, false, {\n            fileName: _jsxFileName,\n            lineNumber: 66,\n            columnNumber: 17\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"footer\", {\n      className: \"footer\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"container\",\n        children: /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"text-muted\",\n          children: \"something something legal and ownership plus some links\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 54,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"8IPoPrqmyjqZIwWP3N5waHiKGMw=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["SetSelection","getCardImage","BoosterPack","React","useState","useEffect","jsxDEV","_jsxDEV","App","_s","cards","setCards","set","setSet","onStartDraft","setCode","fetchCards","response","fetch","name","json","rareMythic","uncommons","Promise","all","Array","from","length","commons","basicLands","cardImages","error","console","className","children","fileName","_jsxFileName","lineNumber","columnNumber","map","card","index","src","alt","_c","$RefreshReg$"],"sources":["C:/Users/Iwolf/Documents/Draft/draftapp/src/App.js"],"sourcesContent":["import './App.css';\nimport SetSelection from './components/SetSelection';\nimport getCardImage from './components/getCardImage';\nimport BoosterPack from './components/BoosterPack';\nimport React, { useState, useEffect } from 'react';\n\nfunction App() {\n  const [cards, setCards] = useState([]);\n  const [set, setSet] = useState('');\n\n  function onStartDraft(setCode) {\n    setSet(setCode);\n  }\n\n  useEffect(() => {\n    async function fetchCards() {\n      if (set) {\n        try {\n          const response = await fetch(`https://api.scryfall.com/cards/random?q=set:${set} (rarity:rare OR rarity:mythic)`);\n          const { name } = await response.json();\n          const rareMythic = await getCardImage(name, 'large');\n\n          const uncommons = await Promise.all(Array.from({ length: 3 }, async () => {\n            const response = await fetch(`https://api.scryfall.com/cards/random?q=set:${set} rarity:uncommon`);\n            const { name } = await response.json();\n            return getCardImage(name, 'large');\n          }));\n\n          const commons = await Promise.all(Array.from({ length: 10 }, async () => {\n            const response = await fetch(`https://api.scryfall.com/cards/random?q=set:${set} rarity:common -t:basic`);\n            const { name } = await response.json();\n            return getCardImage(name, 'large');\n          }));\n\n          const basicLands = await Promise.all(Array.from({ length: 1 }, async () => {\n            const response = await fetch(`https://api.scryfall.com/cards/random?q=set:${set} (t:basic)`);\n            const { name } = await response.json();\n            return getCardImage(name, 'large');\n          }));\n\n\n\n          const cardImages = [rareMythic, ...uncommons, , ...commons, ...basicLands];\n          setCards(cardImages);\n        } catch (error) {\n          console.error(error);\n        }\n      }\n    }\n    fetchCards();\n  }, [set]);\n\n  return (\n    <div className=\"App\">\n      <div className='cardGrid'>\n        <h1>DraftStation</h1>\n        <h4>Magic the Gathering Drafting Simulator</h4>\n        <p>Welcome to the DraftStation! Create a drafting lobby or join one!</p>\n        <SetSelection onStartDraft={onStartDraft} />\n\n        {cards.length > 0 && (\n          <div>\n            <BoosterPack cards={cards} />\n            <div className=\"card-grid\">\n              {cards.map((card, index) => (\n                <img key={index} src={card} alt={`Card ${index + 1}`} className=\"magicCard\"/>\n              ))}\n            </div>\n          </div>\n        )}\n      </div>\n      <footer className=\"footer\">\n        <div className=\"container\">\n          <span className=\"text-muted\">\n            something something legal and ownership plus some links\n          </span>\n        </div>\n      </footer>\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}