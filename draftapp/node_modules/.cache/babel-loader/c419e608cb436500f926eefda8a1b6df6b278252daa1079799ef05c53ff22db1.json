{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Iwolf\\\\Documents\\\\Draft\\\\draftapp\\\\src\\\\components\\\\SetSelection.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction SetSelection(props) {\n  _s();\n  const [selectedSet, setSelectedSet] = useState('');\n  const [selectedSetCode, setSelectedSetCode] = useState('');\n  const [isShowingClose, setIsShowingClose] = useState(false);\n  const [setCodes, setSetCodes] = useState([]);\n  useEffect(() => {\n    async function getSets() {\n      try {\n        const response = await axios.get('https://api.scryfall.com/sets', {\n          params: {\n            'set_type': 'expansion'\n          }\n        });\n        const setArray = response.data.data.filter(set => set.set_type === 'core' || set.set_type === 'expansion').map(set => [set.name, set.code]);\n        setSetCodes(setArray);\n      } catch (error) {\n        console.error(error);\n      }\n    }\n    getSets();\n  }, []);\n  const handleChange = event => {\n    setSelectedSet(event.target.value);\n    setSelectedSetCode(setCodes[event.target.selectedIndex][1]);\n  };\n  const handleSubmit = () => {\n    if (selectedSetCode) {\n      props.onStartOpen(selectedSetCode, selectedSet);\n      setIsShowingClose(true);\n    } else {\n      alert('Please select a set');\n    }\n  };\n  const handleClose = () => {\n    if (selectedSetCode) {\n      props.onClosePack();\n      setIsShowingClose(false);\n    } else {\n      alert('Please select a set');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"Buttons\",\n    children: isShowingClose ? /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"submit\",\n      className: \"mainButtons\",\n      onClick: handleClose,\n      children: \"Clear\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 28\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        className: \"mainButtons\",\n        onClick: handleSubmit,\n        children: \"Open a Pack!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: [\"Select a Set:\", /*#__PURE__*/_jsxDEV(\"select\", {\n          value: selectedSet,\n          onChange: handleChange,\n          children: [/*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"\",\n            children: \"--Select a set--\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 63,\n            columnNumber: 15\n          }, this), setCodes.map((set, index) => /*#__PURE__*/_jsxDEV(\"option\", {\n            value: set[0],\n            children: set[0]\n          }, index, false, {\n            fileName: _jsxFileName,\n            lineNumber: 65,\n            columnNumber: 17\n          }, this))]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 10\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 55,\n    columnNumber: 5\n  }, this);\n}\n_s(SetSelection, \"LQLK0KnqTTqKh3c63CvRiuxIauk=\");\n_c = SetSelection;\nexport default SetSelection;\nvar _c;\n$RefreshReg$(_c, \"SetSelection\");","map":{"version":3,"names":["React","useState","useEffect","axios","jsxDEV","_jsxDEV","SetSelection","props","_s","selectedSet","setSelectedSet","selectedSetCode","setSelectedSetCode","isShowingClose","setIsShowingClose","setCodes","setSetCodes","getSets","response","get","params","setArray","data","filter","set","set_type","map","name","code","error","console","handleChange","event","target","value","selectedIndex","handleSubmit","onStartOpen","alert","handleClose","onClosePack","className","children","type","onClick","fileName","_jsxFileName","lineNumber","columnNumber","onChange","index","_c","$RefreshReg$"],"sources":["C:/Users/Iwolf/Documents/Draft/draftapp/src/components/SetSelection.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\n\r\n\r\nfunction SetSelection(props) {\r\n  const [selectedSet, setSelectedSet] = useState('');\r\n  const [selectedSetCode, setSelectedSetCode] = useState('');\r\n  const [isShowingClose, setIsShowingClose] = useState(false);\r\n  const [setCodes, setSetCodes] = useState([]);\r\n\r\n  useEffect(() => {\r\n    async function getSets() {\r\n      try {\r\n        const response = await axios.get('https://api.scryfall.com/sets', {\r\n          params: {\r\n            'set_type': 'expansion'\r\n          }\r\n        });\r\n\r\n        const setArray = response.data.data.filter(set => set.set_type === 'core' || set.set_type === 'expansion').map(set => [set.name, set.code]);\r\n        setSetCodes(setArray);\r\n      } catch (error) {\r\n        console.error(error);\r\n      }\r\n    }\r\n\r\n    getSets();\r\n  }, []);\r\n\r\n\r\n  const handleChange = (event) => {\r\n    setSelectedSet(event.target.value);\r\n    setSelectedSetCode(setCodes[event.target.selectedIndex][1]);\r\n  }\r\n\r\n  const handleSubmit = () => {\r\n    if (selectedSetCode) {\r\n      props.onStartOpen(selectedSetCode, selectedSet);\r\n      setIsShowingClose(true);\r\n    } else {\r\n      alert('Please select a set');\r\n    }\r\n  }\r\n  \r\n  const handleClose = () => {\r\n    if (selectedSetCode) {\r\n      props.onClosePack();\r\n      setIsShowingClose(false);\r\n    } else {\r\n      alert('Please select a set');\r\n    }\r\n  }\r\n  \r\n  return (\r\n    <div className=\"Buttons\">\r\n\r\n        {isShowingClose ? (<button type=\"submit\" className=\"mainButtons\" onClick={handleClose}>Clear</button>) :\r\n        (<div>\r\n          <button type=\"submit\" className=\"mainButtons\" onClick={handleSubmit}>Open a Pack!</button>\r\n          <label>\r\n          Select a Set:\r\n            <select value={selectedSet} onChange={handleChange}>\r\n              <option value=\"\">--Select a set--</option>\r\n              {setCodes.map((set, index) => (\r\n                <option key={index} value={set[0]}>{set[0]}</option>\r\n              ))}\r\n            </select>\r\n        </label>\r\n        </div>)}\r\n    </div>\r\n  );\r\n  \r\n}\r\n\r\nexport default SetSelection;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}