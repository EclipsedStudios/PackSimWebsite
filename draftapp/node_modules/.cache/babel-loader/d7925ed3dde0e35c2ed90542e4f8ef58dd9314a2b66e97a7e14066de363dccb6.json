{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Iwolf\\\\Documents\\\\Draft\\\\draftapp\\\\src\\\\components\\\\SetSelection.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction SetSelection(props) {\n  _s();\n  const [selectedSet, setSelectedSet] = useState('');\n  const [isShowingClose, setisShowingClose] = useState(false);\n  const [setCodes, setSetCodes] = useState([]);\n  useEffect(() => {\n    fetch('https://api.scryfall.com/sets').then(response => response.json()).then(data => {\n      const codes = data.data.map(set => set.code);\n      setSetCodes(codes);\n    }).catch(error => console.error(error));\n  }, []);\n  const sets = ['ONE', 'BRO', 'DMU', 'SNC', 'NEO', 'LEA'];\n  const handleChange = event => {\n    setSelectedSet(event.target.value);\n  };\n  const handleSubmit = () => {\n    if (selectedSet) {\n      props.onStartOpen(selectedSet);\n      setisShowingClose(true);\n    } else {\n      alert('Please select a set');\n    }\n  };\n  const handleClose = () => {\n    if (selectedSet) {\n      props.onClosePack();\n      setisShowingClose(false);\n    } else {\n      alert('Please select a set');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"Buttons\",\n    children: [isShowingClose ? /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"submit\",\n      className: \"mainButtons\",\n      onClick: handleClose,\n      children: \"Clear\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 27\n    }, this) : /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"submit\",\n      className: \"mainButtons\",\n      onClick: handleSubmit,\n      children: \"Open a Pack!\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 10\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      children: [\"Select a Set:\", /*#__PURE__*/_jsxDEV(\"select\", {\n        value: selectedSet,\n        onChange: handleChange,\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"\",\n          children: \"--Select a set--\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 15\n        }, this), setCodes.map((set, index) => /*#__PURE__*/_jsxDEV(\"option\", {\n          value: set,\n          children: set\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 17\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 43,\n    columnNumber: 5\n  }, this);\n}\n_s(SetSelection, \"viMz5CPq+US2u4nBBCYot42q9rw=\");\n_c = SetSelection;\nexport default SetSelection;\nvar _c;\n$RefreshReg$(_c, \"SetSelection\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","SetSelection","props","_s","selectedSet","setSelectedSet","isShowingClose","setisShowingClose","setCodes","setSetCodes","useEffect","fetch","then","response","json","data","codes","map","set","code","catch","error","console","sets","handleChange","event","target","value","handleSubmit","onStartOpen","alert","handleClose","onClosePack","className","children","type","onClick","fileName","_jsxFileName","lineNumber","columnNumber","onChange","index","_c","$RefreshReg$"],"sources":["C:/Users/Iwolf/Documents/Draft/draftapp/src/components/SetSelection.js"],"sourcesContent":["import React, { useState } from 'react';\r\n\r\nfunction SetSelection(props) {\r\n  const [selectedSet, setSelectedSet] = useState('');\r\n  const [isShowingClose, setisShowingClose] = useState(false);\r\n  const [setCodes, setSetCodes] = useState([]);\r\n\r\n  useEffect(() => {\r\n    fetch('https://api.scryfall.com/sets')\r\n      .then(response => response.json())\r\n      .then(data => {\r\n        const codes = data.data.map(set => set.code);\r\n        setSetCodes(codes);\r\n      })\r\n      .catch(error => console.error(error));\r\n  }, []);\r\n\r\n  const sets = ['ONE', 'BRO', 'DMU', 'SNC', 'NEO', 'LEA'];\r\n\r\n  const handleChange = (event) => {\r\n    setSelectedSet(event.target.value);\r\n  }\r\n\r\n  const handleSubmit = () => {\r\n    if (selectedSet) {\r\n      props.onStartOpen(selectedSet);\r\n      setisShowingClose(true);\r\n    } else {\r\n      alert('Please select a set');\r\n    }\r\n  }\r\n\r\n  const handleClose = () => {\r\n    if (selectedSet) {\r\n      props.onClosePack();\r\n      setisShowingClose(false);\r\n    } else {\r\n      alert('Please select a set');\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div className=\"Buttons\">\r\n      {\r\n        isShowingClose ? (<button type=\"submit\" className=\"mainButtons\" onClick={handleClose}>Clear</button>) :\r\n        (<button type=\"submit\" className=\"mainButtons\" onClick={handleSubmit}>Open a Pack!</button>) \r\n      }\r\n      {\r\n        <label>\r\n          Select a Set:\r\n            <select value={selectedSet} onChange={handleChange}>\r\n              <option value=\"\">--Select a set--</option>\r\n              {setCodes.map((set, index) => (\r\n                <option key={index} value={set}>{set}</option>\r\n              ))}\r\n            </select>\r\n        </label>\r\n      }\r\n    </div>\r\n  );\r\n  \r\n}\r\n\r\nexport default SetSelection;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}