{"ast":null,"code":"var _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport getCardImage from './getCardImage';\nfunction BoosterPack(_ref) {\n  _s();\n  let {\n    set,\n    onComplete\n  } = _ref;\n  const [cards, setCards] = useState([]);\n  useEffect(() => {\n    async function fetchCards() {\n      try {\n        const basicLand = await getCardImage(`Basic Land - ${set}`, 'small');\n        const uncommons = await Promise.all(Array.from({\n          length: 3\n        }, async () => {\n          const response = await fetch(`https://api.scryfall.com/cards/random?q=set:${set} rarity:uncommon`);\n          const {\n            name\n          } = await response.json();\n          return getCardImage(name, 'small');\n        }));\n        const response = await fetch(`https://api.scryfall.com/cards/random?q=set:${set} (rarity:rare OR rarity:mythic)`);\n        const {\n          name\n        } = await response.json();\n        const rareMythic = await getCardImage(name, 'small');\n        const commons = await Promise.all(Array.from({\n          length: 10\n        }, async () => {\n          const response = await fetch(`https://api.scryfall.com/cards/random?q=set:${set} rarity:common`);\n          const {\n            name\n          } = await response.json();\n          return getCardImage(name, 'small');\n        }));\n        const cardImages = [basicLand, ...uncommons, rareMythic, ...commons];\n        setCards(cardImages);\n        onComplete(cardImages); // Pass the card images up to the parent component\n      } catch (error) {\n        console.error(error);\n      }\n    }\n    fetchCards();\n  }, [set, onComplete]);\n}\n_s(BoosterPack, \"M51NroWgc5aUEHiqsZiaQ+7WeWA=\");\n_c = BoosterPack;\nexport default BoosterPack;\nvar _c;\n$RefreshReg$(_c, \"BoosterPack\");","map":{"version":3,"names":["React","useState","useEffect","getCardImage","BoosterPack","_ref","_s","set","onComplete","cards","setCards","fetchCards","basicLand","uncommons","Promise","all","Array","from","length","response","fetch","name","json","rareMythic","commons","cardImages","error","console","_c","$RefreshReg$"],"sources":["C:/Users/Iwolf/Documents/Draft/draftapp/src/components/BoosterPack.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport getCardImage from './getCardImage';\r\n\r\nfunction BoosterPack({ set, onComplete }) {\r\n  const [cards, setCards] = useState([]);\r\n\r\n  useEffect(() => {\r\n    async function fetchCards() {\r\n      try {\r\n        const basicLand = await getCardImage(`Basic Land - ${set}`, 'small');\r\n        const uncommons = await Promise.all(Array.from({ length: 3 }, async () => {\r\n          const response = await fetch(`https://api.scryfall.com/cards/random?q=set:${set} rarity:uncommon`);\r\n          const { name } = await response.json();\r\n          return getCardImage(name, 'small');\r\n        }));\r\n        const response = await fetch(`https://api.scryfall.com/cards/random?q=set:${set} (rarity:rare OR rarity:mythic)`);\r\n        const { name } = await response.json();\r\n        const rareMythic = await getCardImage(name, 'small');\r\n        const commons = await Promise.all(Array.from({ length: 10 }, async () => {\r\n          const response = await fetch(`https://api.scryfall.com/cards/random?q=set:${set} rarity:common`);\r\n          const { name } = await response.json();\r\n          return getCardImage(name, 'small');\r\n        }));\r\n        const cardImages = [basicLand, ...uncommons, rareMythic, ...commons];\r\n        setCards(cardImages);\r\n        onComplete(cardImages); // Pass the card images up to the parent component\r\n      } catch (error) {\r\n        console.error(error);\r\n      }\r\n    }\r\n    fetchCards();\r\n  }, [set, onComplete]);\r\n}\r\n\r\nexport default BoosterPack;\r\n"],"mappings":";AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAOC,YAAY,MAAM,gBAAgB;AAEzC,SAASC,WAAWA,CAAAC,IAAA,EAAsB;EAAAC,EAAA;EAAA,IAArB;IAAEC,GAAG;IAAEC;EAAW,CAAC,GAAAH,IAAA;EACtC,MAAM,CAACI,KAAK,EAAEC,QAAQ,CAAC,GAAGT,QAAQ,CAAC,EAAE,CAAC;EAEtCC,SAAS,CAAC,MAAM;IACd,eAAeS,UAAUA,CAAA,EAAG;MAC1B,IAAI;QACF,MAAMC,SAAS,GAAG,MAAMT,YAAY,CAAE,gBAAeI,GAAI,EAAC,EAAE,OAAO,CAAC;QACpE,MAAMM,SAAS,GAAG,MAAMC,OAAO,CAACC,GAAG,CAACC,KAAK,CAACC,IAAI,CAAC;UAAEC,MAAM,EAAE;QAAE,CAAC,EAAE,YAAY;UACxE,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAE,+CAA8Cb,GAAI,kBAAiB,CAAC;UAClG,MAAM;YAAEc;UAAK,CAAC,GAAG,MAAMF,QAAQ,CAACG,IAAI,EAAE;UACtC,OAAOnB,YAAY,CAACkB,IAAI,EAAE,OAAO,CAAC;QACpC,CAAC,CAAC,CAAC;QACH,MAAMF,QAAQ,GAAG,MAAMC,KAAK,CAAE,+CAA8Cb,GAAI,iCAAgC,CAAC;QACjH,MAAM;UAAEc;QAAK,CAAC,GAAG,MAAMF,QAAQ,CAACG,IAAI,EAAE;QACtC,MAAMC,UAAU,GAAG,MAAMpB,YAAY,CAACkB,IAAI,EAAE,OAAO,CAAC;QACpD,MAAMG,OAAO,GAAG,MAAMV,OAAO,CAACC,GAAG,CAACC,KAAK,CAACC,IAAI,CAAC;UAAEC,MAAM,EAAE;QAAG,CAAC,EAAE,YAAY;UACvE,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAE,+CAA8Cb,GAAI,gBAAe,CAAC;UAChG,MAAM;YAAEc;UAAK,CAAC,GAAG,MAAMF,QAAQ,CAACG,IAAI,EAAE;UACtC,OAAOnB,YAAY,CAACkB,IAAI,EAAE,OAAO,CAAC;QACpC,CAAC,CAAC,CAAC;QACH,MAAMI,UAAU,GAAG,CAACb,SAAS,EAAE,GAAGC,SAAS,EAAEU,UAAU,EAAE,GAAGC,OAAO,CAAC;QACpEd,QAAQ,CAACe,UAAU,CAAC;QACpBjB,UAAU,CAACiB,UAAU,CAAC,CAAC,CAAC;MAC1B,CAAC,CAAC,OAAOC,KAAK,EAAE;QACdC,OAAO,CAACD,KAAK,CAACA,KAAK,CAAC;MACtB;IACF;IACAf,UAAU,EAAE;EACd,CAAC,EAAE,CAACJ,GAAG,EAAEC,UAAU,CAAC,CAAC;AACvB;AAACF,EAAA,CA7BQF,WAAW;AAAAwB,EAAA,GAAXxB,WAAW;AA+BpB,eAAeA,WAAW;AAAC,IAAAwB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}