{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Iwolf\\\\Documents\\\\Draft\\\\draftapp\\\\src\\\\components\\\\SetSelection.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction SetSelection(props) {\n  _s();\n  const [selectedSet, setSelectedSet] = useState('');\n  const [isShowingClose, setisShowingClose] = useState(false);\n  const [setCodes, setSetCodes] = useState([]);\n  useEffect(() => {\n    const url = 'https://api.scryfall.com/sets';\n    const params = {\n      q: 'legalities:modern',\n      order: 'released_at',\n      dir: 'desc',\n      set_type: ['core', 'expansion'],\n      released_at: '>2002-01-01'\n    };\n    const fetchSets = async () => {\n      try {\n        const response = await fetch(`${url}?${new URLSearchParams(params)}`);\n        const data = await response.json();\n        setCodes(data.data.map(_ref => {\n          let {\n            name,\n            code\n          } = _ref;\n          return [name.toUpperCase(), code];\n        }));\n      } catch (error) {\n        console.error(error);\n      }\n    };\n    fetchSets();\n  }, []);\n  const handleChange = event => {\n    setSelectedSet(event.target.value);\n  };\n  const handleSubmit = () => {\n    if (selectedSet) {\n      props.onStartOpen(selectedSet);\n      setisShowingClose(true);\n    } else {\n      alert('Please select a set');\n    }\n  };\n  const handleClose = () => {\n    if (selectedSet) {\n      props.onClosePack();\n      setisShowingClose(false);\n    } else {\n      alert('Please select a set');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"Buttons\",\n    children: [isShowingClose ? /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"submit\",\n      className: \"mainButtons\",\n      onClick: handleClose,\n      children: \"Clear\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 27\n    }, this) : /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"submit\",\n      className: \"mainButtons\",\n      onClick: handleSubmit,\n      children: \"Open a Pack!\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 10\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      children: [\"Select a Set:\", /*#__PURE__*/_jsxDEV(\"select\", {\n        value: selectedSet,\n        onChange: handleChange,\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"\",\n          children: \"--Select a set--\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 15\n        }, this), setCodes.map((set, index) => /*#__PURE__*/_jsxDEV(\"option\", {\n          value: set,\n          children: set\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 17\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 55,\n    columnNumber: 5\n  }, this);\n}\n_s(SetSelection, \"viMz5CPq+US2u4nBBCYot42q9rw=\");\n_c = SetSelection;\nexport default SetSelection;\nvar _c;\n$RefreshReg$(_c, \"SetSelection\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","SetSelection","props","_s","selectedSet","setSelectedSet","isShowingClose","setisShowingClose","setCodes","setSetCodes","url","params","q","order","dir","set_type","released_at","fetchSets","response","fetch","URLSearchParams","data","json","map","_ref","name","code","toUpperCase","error","console","handleChange","event","target","value","handleSubmit","onStartOpen","alert","handleClose","onClosePack","className","children","type","onClick","fileName","_jsxFileName","lineNumber","columnNumber","onChange","set","index","_c","$RefreshReg$"],"sources":["C:/Users/Iwolf/Documents/Draft/draftapp/src/components/SetSelection.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\n\r\nfunction SetSelection(props) {\r\n  const [selectedSet, setSelectedSet] = useState('');\r\n  const [isShowingClose, setisShowingClose] = useState(false);\r\n  const [setCodes, setSetCodes] = useState([]);\r\n\r\n  useEffect(() => {\r\n    const url = 'https://api.scryfall.com/sets';\r\n    const params = { \r\n      q: 'legalities:modern',\r\n      order: 'released_at',\r\n      dir: 'desc',\r\n      set_type: ['core', 'expansion'],\r\n      released_at: '>2002-01-01'\r\n    };\r\n\r\n    const fetchSets = async () => {\r\n      try {\r\n        const response = await fetch(`${url}?${new URLSearchParams(params)}`);\r\n        const data = await response.json();\r\n        setCodes(data.data.map(({ name, code }) => [name.toUpperCase(), code]));\r\n      } catch (error) {\r\n        console.error(error);\r\n      }\r\n    };\r\n\r\n    fetchSets();\r\n  }, []);\r\n\r\n\r\n  const handleChange = (event) => {\r\n    setSelectedSet(event.target.value);\r\n  }\r\n\r\n  const handleSubmit = () => {\r\n    if (selectedSet) {\r\n      props.onStartOpen(selectedSet);\r\n      setisShowingClose(true);\r\n    } else {\r\n      alert('Please select a set');\r\n    }\r\n  }\r\n\r\n  const handleClose = () => {\r\n    if (selectedSet) {\r\n      props.onClosePack();\r\n      setisShowingClose(false);\r\n    } else {\r\n      alert('Please select a set');\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div className=\"Buttons\">\r\n      {\r\n        isShowingClose ? (<button type=\"submit\" className=\"mainButtons\" onClick={handleClose}>Clear</button>) :\r\n        (<button type=\"submit\" className=\"mainButtons\" onClick={handleSubmit}>Open a Pack!</button>) \r\n      }\r\n      {\r\n        <label>\r\n          Select a Set:\r\n            <select value={selectedSet} onChange={handleChange}>\r\n              <option value=\"\">--Select a set--</option>\r\n              {setCodes.map((set, index) => (\r\n                <option key={index} value={set}>{set}</option>\r\n              ))}\r\n            </select>\r\n        </label>\r\n      }\r\n    </div>\r\n  );\r\n  \r\n}\r\n\r\nexport default SetSelection;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}